export default interface Kubernetes {
    id: string,
    location: string,
    name: string,
    type: 'Microsoft.ContainerService/ManagedClusters',
    properties: {
      provisioningState: string,
      powerState: { code: string },
      kubernetesVersion: string,
      currentKubernetesVersion: string,
      dnsPrefix: string,
      fqdn: string,
      azurePortalFQDN: string,
      agentPoolProfiles: any[],
      servicePrincipalProfile: { clientId: string },
      addonProfiles: { azureKeyvaultSecretsProvider: any, azurepolicy: any },
      nodeResourceGroup: string,
      enableRBAC: boolean,
      supportPlan: string,
      networkProfile: {
        networkPlugin: string,
        networkPolicy: string,
        loadBalancerSku: string,
        loadBalancerProfile: any,
        podCidr: string,
        serviceCidr: string,
        dnsServiceIP: string,
        outboundType: string,
        podCidrs: any[],
        serviceCidrs: any[],
        ipFamilies: any[]
      },
      maxAgentPools: number,
      identityProfile: { kubeletidentity: any },
      autoScalerProfile: {
        'balance-similar-node-groups': 'false',
        'daemonset-eviction-for-empty-nodes': false,
        'daemonset-eviction-for-occupied-nodes': true,
        expander: 'random',
        'ignore-daemonsets-utilization': false,
        'max-empty-bulk-delete': '10',
        'max-graceful-termination-sec': '600',
        'max-node-provision-time': '15m',
        'max-total-unready-percentage': '45',
        'new-pod-scale-up-delay': '0s',
        'ok-total-unready-count': '3',
        'scale-down-delay-after-add': '10m',
        'scale-down-delay-after-delete': '10s',
        'scale-down-delay-after-failure': '3m',
        'scale-down-unneeded-time': '10m',
        'scale-down-unready-time': '20m',
        'scale-down-utilization-threshold': '0.5',
        'scan-interval': '10s',
        'skip-nodes-with-local-storage': 'false',
        'skip-nodes-with-system-pods': 'true'
      },
      autoUpgradeProfile: { upgradeChannel: string, nodeOSUpgradeChannel: string },
      disableLocalAccounts: boolean,
      securityProfile: any,
      storageProfile: {
        diskCSIDriver: any,
        fileCSIDriver: any,
        snapshotController: any
      },
      oidcIssuerProfile: { enabled: boolean },
      workloadAutoScalerProfile: any,
      azureMonitorProfile: { metrics: any },
      resourceUID: string,
      metricsProfile: { costAnalysis: any }
    },
    identity: {
      type: string,
      principalId: string,
      tenantId: string
    },
    sku: { name: string, tier: string }
}